{"version":3,"sources":["config/theme/theme.ts","config/theme/index.ts","config/charts/items.ts","config/index.ts","components/match/match.styled.tsx","components/match/components/info/info.styled.tsx","components/match/components/info/index.ts","components/match/components/info/info.tsx","components/match/components/finalResults/finalResults.styled.tsx","components/match/components/finalResults/index.ts","components/match/components/finalResults/finalResults.tsx","components/match/index.ts","components/match/match.tsx","components/title/title.styled.tsx","components/title/index.ts","components/title/title.tsx","components/charts/components/barChart/index.ts","components/charts/components/barChart/barChart.tsx","components/charts/components/areaChart/index.ts","components/charts/components/areaChart/areaChart.tsx","components/charts/components/tooltip/tooltip.styled.tsx","components/charts/components/tooltip/components/byTeam/byTeam.tsx","components/charts/components/tooltip/components/byTeam/index.ts","components/charts/components/tooltip/components/resultsAvg/index.ts","components/charts/components/tooltip/components/resultsAvg/resultsAvg.tsx","components/charts/components/tooltip/components/goalsAvgByYear/index.ts","components/charts/components/tooltip/components/goalsAvgByYear/goalsAvgByYear.tsx","components/charts/components/tooltip/components/resultsAvgByYear/index.ts","components/charts/components/tooltip/components/resultsAvgByYear/resultsAvgByYear.tsx","components/charts/components/tooltip/components/valuesForAndAgainst/index.ts","components/charts/components/tooltip/components/valuesForAndAgainst/valuesForAndAgainst.tsx","components/header/header.styled.tsx","components/header/index.ts","components/matchCounter/matchCounter.styled.tsx","components/matchCounter/index.ts","components/matchCounter/matchCounter.tsx","components/content/content.styled.tsx","components/content/index.ts","components/boxTitle/boxTitle.styled.tsx","components/boxTitle/index.ts","utils/filtersMatches/filtersMatches.ts","utils/addTypesToMatch/addTypesToMatch.ts","utils/formatMatchesAvgByAt/formatMatchesAvgByAt.ts","modules/ven/index.ts","modules/ven/ven.tsx","routes.tsx","global.styled.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","colors","white","alabaster","blueZodiac","dustyGray","gallery","pastelGreen","japonica","fonts","family","sizes","reset","title","subTitle","default","small","goals","percentage","radius","big","gutter","size","medium","large","xl","barChartItems","name","fill","areaChartItems","goalsAvgAreaChartItems","goalsByTeamAreaChartItems","goalsMaxAndMinAreaChartItems","winsByTeamItems","drawsByTeamItems","lossesByTeamItems","MatchStyled","styled","div","InfoStyled","Info","versus","dates","hours","events","phases","timezone","Intl","DateTimeFormat","resolvedOptions","locale","tz","timeZone","datetimeWithYourTZAndLocale","DateTime","fromISO","zone","setZone","setLocale","toFormat","FinalResultsStyled","FinalResults","results","at","gf","ga","data-testid","data-result","Match","props","TitleStyled","h1","Title","team","BarChart","data","items","xAxis","customTooltip","minWidth","minHeight","strokeDasharray","dataKey","content","map","item","index","key","maxBarSize","stackId","AreaChart","datakey","stackOffset","type","stroke","TooltipStyled","ByTeam","prototypes","Proptypes","string","oneOf","number","isRequired","ResultsAvg","win","draw","loss","style","color","GoalsAvgByYear","payload","gfColor","gaColor","years","matches","gfAvg","toFixed","gaAvg","ResultsAvgByYear","winColor","drawColor","lossColor","wins","winsAvg","draws","drawsAvg","losses","lossesAvg","ValuesForAndAgainst","valueFor","valueAgainst","HeaderStyled","header","MatchCounterStyled","isTotal","MatchCounter","amount","amountFormatted","value","max","ContentStyled","BoxTitleStyled","h2","byPlayed","match","byNotPLayed","addTypesToMatch","byAt","description","includes","itemFormatted","replace","Number","Ven","played","filter","notPlayed","resultsAvg","historicalMatches","matchWithMostGoalsFor","matchWithMostGoalsAgainst","MatchesDataFormattedAvgByAt","home","abroad","neutral","formatMatchesAvgByAt","matchesAvgByAt","matchesTotal","winAvg","drawAvg","lossAvg","notPlayedAvg","length","resultsAvgByYear","active","Tooltip","goalsAvgByYear","Win","Draw","Loss","goalsByTeam","gf_sum","ga_sum","goalsMaxAndMin","gf_max","ga_max","winsByTeam","drawsByTeam","lossesByTeam","Routes","basename","exact","path","render","to","component","Modules","GlobalStyles","createGlobalStyle","toString","App","config","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.986f11c0.chunk.js","sourcesContent":["import { themeTypes } from './theme.type';\n\nexport const theme: themeTypes = {\n  colors: {\n    white: '#fff',\n    alabaster: '#f7f7f7',\n    blueZodiac: '#0A1130',\n    dustyGray: '#999',\n    gallery: '#eee',\n    pastelGreen: '#6DD799',\n    japonica: '#D76D6D'\n  },\n  fonts: {\n    family: ['Roboto', 'sans-serif'],\n    sizes: {\n      reset: '10px',\n      title: '2.6rem',\n      subTitle: '1.6rem',\n      default: '1.4rem',\n      small: '1.2rem',\n      goals: '1.8rem',\n      percentage: '2.4rem'\n    }\n  },\n  radius: {\n    small: '.2rem',\n    big: '.4rem'\n  },\n  gutter: {\n    small: '1.5rem',\n    big: '3rem'\n  },\n  size: {\n    small: '512px',\n    medium: '900px',\n    large: '1200px',\n    xl: '1400px'\n  }\n};\n","export * from './theme';\nexport * from './theme.type';\n","import { theme } from 'config/theme';\n\nexport const barChartItems = [\n  { name: 'Win', fill: theme.colors.pastelGreen },\n  { name: 'Draw', fill: theme.colors.blueZodiac },\n  { name: 'Loss', fill: theme.colors.japonica }\n];\n\nexport const areaChartItems = [\n  { name: 'wins', fill: theme.colors.pastelGreen },\n  { name: 'draws', fill: theme.colors.blueZodiac },\n  { name: 'losses', fill: theme.colors.japonica }\n];\n\nexport const goalsAvgAreaChartItems = [\n  { name: 'gf', fill: theme.colors.pastelGreen },\n  { name: 'ga', fill: theme.colors.blueZodiac }\n];\n\nexport const goalsByTeamAreaChartItems = [\n  { name: 'gf_sum', fill: theme.colors.pastelGreen },\n  { name: 'ga_sum', fill: theme.colors.blueZodiac }\n];\n\nexport const goalsMaxAndMinAreaChartItems = [\n  { name: 'gf_max', fill: theme.colors.pastelGreen },\n  { name: 'ga_max', fill: theme.colors.blueZodiac }\n];\n\nexport const winsByTeamItems = [{ name: 'wins', fill: theme.colors.pastelGreen }];\nexport const drawsByTeamItems = [{ name: 'draws', fill: theme.colors.blueZodiac }];\nexport const lossesByTeamItems = [{ name: 'losses', fill: theme.colors.japonica }];\n","export * from './theme';\nexport * from './charts';\n","import styled from 'styled-components';\n\nconst MatchStyled = styled.div`\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.colors?.gallery};\n  display: flex;\n  padding: 1rem 1.5rem;\n\n  &:last-of-type {\n    border-bottom: 0;\n  }\n`;\n\nexport default MatchStyled;\n","import styled from 'styled-components';\n\nconst InfoStyled = styled.div`\n  p {\n    margin: 0;\n  }\n\n  h4 {\n    font-size: 1.4rem;\n    margin: 0 0 0.4rem;\n    text-transform: uppercase;\n\n    @media screen and (min-width: ${({ theme }) => theme.size?.medium}) {\n      font-size: 1.2rem;\n    }\n\n    small {\n      @media screen and (max-width: ${({ theme }) => theme.size?.medium}) {\n        display: block;\n      }\n    }\n  }\n\n  small  {\n    color: ${({ theme }) => theme.colors?.dustyGray};\n    font-size: 1.2rem;\n    font-weight: 500;\n    text-transform: capitalize;\n  }\n`;\n\nexport default InfoStyled;\n","import Info from './info';\n\nexport default Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DateTime } from 'luxon';\n\nimport InfoStyled from './info.styled';\nimport { InfoTypes } from './info.types';\n\nconst Info = ({\n  versus,\n  dates,\n  hours,\n  events,\n  phases,\n  timezone\n}: InfoTypes) => {\n  const { locale, timeZone: tz } = Intl.DateTimeFormat().resolvedOptions();\n  const datetime = DateTime.fromISO(\n    `${dates ? dates : ''}${hours ? `T${hours}` : ''}`,\n    { zone: timezone }\n  );\n  const datetimeWithYourTZAndLocale = datetime\n    .setZone(tz)\n    .setLocale(locale)\n    .toFormat(`dd LLL, yyyy. ${hours ? 'HH:mm' : ''}`);\n  return (\n    <InfoStyled>\n      <h4>\n        {versus} <small>{datetimeWithYourTZAndLocale}</small>\n      </h4>\n      <p>\n        <small>{events}</small> <small>{phases}</small>\n      </p>\n    </InfoStyled>\n  );\n};\n\nInfo.propTypes = {\n  versus: PropTypes.string.isRequired,\n  dates: PropTypes.string.isRequired,\n  hours: PropTypes.string,\n  events: PropTypes.string.isRequired,\n  phases: PropTypes.string.isRequired,\n  timezone: PropTypes.string.isRequired\n};\n\nexport default Info;\n","import styled from 'styled-components';\n\nconst FinalResultsStyled = styled.div`\n  background-color: ${({ theme }) => theme.colors?.alabaster};\n  border-radius: ${({ theme }) => theme.radius?.big};\n  flex-basis: 6rem;\n  font-size: 1.8rem;\n  font-weight: 700;\n  margin-right: 1rem;\n  min-width: 6rem;\n  padding: 1.2rem 0;\n  position: relative;\n\n  &:before {\n    content: '';\n    border-radius: 100%;\n    display: block;\n    height: 1rem;\n    top: -0.4rem;\n    left: -0.4rem;\n    position: absolute;\n    width: 1rem;\n  }\n\n  &[data-result='Win']:before {\n    background-color: ${({ theme }) => theme.colors?.pastelGreen};\n  }\n\n  &[data-result='Loss']:before {\n    background-color: ${({ theme }) => theme.colors?.japonica};\n  }\n\n  &[data-result='Draw']:before {\n    display: none;\n  }\n\n  ul {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    place-content: space-around;\n  }\n\n  li {\n    list-style: none;\n  }\n`;\n\nexport default FinalResultsStyled;\n","import FinalResults from './finalResults';\n\nexport default FinalResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FinalResultsStyled from './finalResults.styled';\nimport { AtTypes, ResultsTypes, FinalResultsTypes } from './finalResults.types';\n\nconst FinalResults = ({ results, at, gf, ga }: FinalResultsTypes) => (\n  <FinalResultsStyled data-testid=\"final-result\" data-result={results}>\n    <ul>\n      <li>{at === 'Home' ? gf : ga}</li>\n      <li>{at === 'Home' ? ga : gf}</li>\n    </ul>\n  </FinalResultsStyled>\n);\n\nFinalResults.propTypes = {\n  at: PropTypes.oneOf<AtTypes>(['Home', 'Abroad', 'Neutral']).isRequired,\n  results: PropTypes.oneOf<ResultsTypes>(['Not played', 'Loss', 'Win', 'Draw'])\n    .isRequired,\n  gf: PropTypes.number.isRequired,\n  ga: PropTypes.number.isRequired\n};\n\nexport default FinalResults;\n","import Match from './match';\n\nexport default Match;\n","import React from 'react';\n\nimport MatchStyled from './match.styled';\nimport { MatchTypes } from './match.types';\nimport * as Components from './components';\n\nconst Match = (props: MatchTypes) => (\n  <MatchStyled>\n    {props.results !== 'Not played' && (\n      <Components.FinalResults\n        results={props.results}\n        at={props.at}\n        gf={props.gf}\n        ga={props.ga}\n      />\n    )}\n    <Components.Info\n      versus={props.versus}\n      dates={props.dates}\n      hours={props.hours}\n      events={props.events}\n      phases={props.phases}\n      timezone={props.timezone}\n    />\n  </MatchStyled>\n);\n\nMatch.propTypes = {\n  ...Components.Info.propTypes,\n  ...Components.FinalResults.propTypes\n};\n\nexport default Match;\n","import styled from 'styled-components';\n\nconst TitleStyled = styled.h1`\n  font-size: ${({ theme }) => theme.fonts?.sizes?.title};\n\n  span {\n    color: ${({ theme }) => theme.colors?.dustyGray};\n    display: block;\n    font-size: ${({ theme }) => theme.fonts?.sizes?.subTitle};\n  }\n`;\n\nexport default TitleStyled;\n","import Title from './title';\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TitleTypes from './title.types';\nimport TitleStyled from './title.styled';\n\nconst Title = ({ team }: TitleTypes) => (\n  <TitleStyled>\n    {team} <span>Selección de Fútbol</span>\n  </TitleStyled>\n);\n\nTitle.propTypes = {\n  team: PropTypes.string.isRequired\n};\n\nexport default Title;\n","import BarChart from './barChart';\n\nexport default BarChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { XAxis, CartesianGrid, Tooltip, BarChart, Bar, ResponsiveContainer } from 'recharts';\n\nimport { BarChartTypes } from './barChart.types';\n\nconst WrapperBarChart = ({ data, items, xAxis, customTooltip }: BarChartTypes) => (\n  <div>\n    <ResponsiveContainer minWidth=\"600\" minHeight=\"200px\">\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey={xAxis} />\n        <Tooltip content={customTooltip} />\n        {items.map((item, index) => (\n          <Bar key={index} maxBarSize={40} dataKey={item.name} stackId=\"a\" fill={item.fill} />\n        ))}\n      </BarChart>\n    </ResponsiveContainer>\n  </div>\n);\n\nWrapperBarChart.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      fill: PropTypes.string.isRequired\n    }).isRequired\n  ),\n  data: PropTypes.array.isRequired,\n  xAxis: PropTypes.string.isRequired\n};\n\nexport default WrapperBarChart;\n","import AreaChart from './areaChart';\n\nexport default AreaChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AreaChart, Area, XAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nimport { AreaChartTypes } from './areaChart.types';\n\nconst WrapperAreaChart = ({ data, items, datakey, customTooltip }: AreaChartTypes) => (\n  <div>\n    <ResponsiveContainer minWidth=\"600\" minHeight=\"200px\">\n      <AreaChart data={data} stackOffset=\"silhouette\">\n        <CartesianGrid strokeDasharray=\"2 2\" />\n        <XAxis dataKey={datakey} />\n        <Tooltip content={customTooltip} />\n        {items.map((item, index) => (\n          <Area\n            key={index}\n            type=\"monotone\"\n            dataKey={item.name}\n            stackId=\"1\"\n            fill={item.fill}\n            stroke={item.fill}\n          />\n        ))}\n      </AreaChart>\n    </ResponsiveContainer>\n  </div>\n);\n\nWrapperAreaChart.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      fill: PropTypes.string.isRequired\n    }).isRequired\n  ),\n  data: PropTypes.array.isRequired,\n  datakey: PropTypes.string.isRequired\n};\n\nexport default WrapperAreaChart;\n","import styled from 'styled-components';\n\nconst TooltipStyled = styled.div`\n  background-color: white;\n  border-radius: 1rem;\n  padding: 0.8rem 1.5rem;\n\n  h4 {\n    font-size: 1.4rem;\n    margin: 1rem 0;\n  }\n\n  p {\n    font-size: 1.2rem;\n    margin: 0 0 1rem;\n  }\n\n  small {\n    background-color: #f7f7f7;\n    border-radius: 1rem;\n    font-weight: 700;\n    padding: 0.5rem;\n    margin-left: 0.4rem;\n  }\n`;\n\nexport default TooltipStyled;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport { ByTeamTypes } from './byTeam.types';\nimport TooltipStyled from 'components/charts/components/tooltip/tooltip.styled';\n\nconst ByTeam = ({ versus, name, type }: ByTeamTypes) => {\n  let title;\n  switch (name) {\n    case 'wins':\n      title = 'Victorias';\n      break;\n    case 'draws':\n      title = 'Empates';\n      break;\n    default:\n      title = 'Derrotas';\n      break;\n  }\n  return (\n    <TooltipStyled>\n      <h4>Vs. {versus}</h4>\n      <p>\n        {title}: {type}\n      </p>\n    </TooltipStyled>\n  );\n};\n\nByTeam.prototypes = {\n  versus: Proptypes.string,\n  name: Proptypes.oneOf(['wins', 'draws', 'losses']),\n  type: Proptypes.number.isRequired\n};\n\nexport default ByTeam;\n","import ByTeam from './byTeam';\n\nexport default ByTeam;\n","import ResultsAvg from './resultsAvg';\n\nexport default ResultsAvg;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { resultsAvg } from './resultsAvg.types';\nimport TooltipStyled from 'components/charts/components/tooltip/tooltip.styled';\n\nconst ResultsAvg = ({ name, win, draw, loss }: resultsAvg) => (\n  <TooltipStyled>\n    <h4>\n      {name}:<small>{win + draw + loss}% de partidos</small>\n    </h4>\n    <p style={{ color: '#D76D6D' }}>Derrota: {loss}%</p>\n    <p style={{ color: '#0A1130' }}>Empate: {draw}%</p>\n    <p style={{ color: '#6DD799' }}>Victoria: {win}%</p>\n  </TooltipStyled>\n);\n\nResultsAvg.propTypes = {\n  name: PropTypes.string.isRequired,\n  win: PropTypes.number.isRequired,\n  draw: PropTypes.number.isRequired,\n  loss: PropTypes.number.isRequired\n};\n\nexport default ResultsAvg;\n","import GoalsAvgByYear from './goalsAvgByYear';\n\nexport default GoalsAvgByYear;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { GoalsAvgByYearTypes } from './goalsAvgByYear.types';\nimport TooltipStyled from 'components/charts/components/tooltip/tooltip.styled';\n\nconst GoalsAvgByYear = ({ payload, gfColor, gaColor }: GoalsAvgByYearTypes) => (\n  <TooltipStyled>\n    <h4>\n      En {payload?.years} jugó {payload?.matches} partidos\n    </h4>\n    <p style={{ color: gfColor }}>\n      A Favor: {payload.gf}\n      <small> {payload.gfAvg.toFixed(2)} por partido</small>\n    </p>\n    <p style={{ color: gaColor }}>\n      En Contra: {payload.ga}\n      <small> {payload.gaAvg.toFixed(2)} por partido</small>\n    </p>\n  </TooltipStyled>\n);\n\nGoalsAvgByYear.propTypes = {\n  gfColor: PropTypes.string.isRequired,\n  gaColor: PropTypes.string.isRequired,\n  payload: PropTypes.shape({\n    years: PropTypes.number.isRequired,\n    matches: PropTypes.number.isRequired,\n    gf: PropTypes.number.isRequired,\n    gfAvg: PropTypes.number.isRequired,\n    ga: PropTypes.number.isRequired,\n    gaAvg: PropTypes.number.isRequired\n  })\n};\n\nexport default GoalsAvgByYear;\n","import ResultsAvgByYear from './resultsAvgByYear';\n\nexport default ResultsAvgByYear;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { resultsAvgByYearTypes } from './resultsAvgByYear.types';\nimport TooltipStyled from 'components/charts/components/tooltip/tooltip.styled';\n\nconst ResultsAvgByYear = ({ winColor, drawColor, lossColor, payload }: resultsAvgByYearTypes) => (\n  <TooltipStyled>\n    <h4>\n      En {payload.years} jugó {payload.matches} partidos\n    </h4>\n    <p style={{ color: winColor }}>\n      Victorias: {payload.wins}\n      <small> {payload.winsAvg.toFixed(2)}%</small>\n    </p>\n    <p style={{ color: drawColor }}>\n      Empates: {payload.draws}\n      <small> {payload.drawsAvg.toFixed(2)}%</small>\n    </p>\n    <p style={{ color: lossColor }}>\n      Derrotas: {payload.losses}\n      <small> {payload.lossesAvg.toFixed(2)}%</small>\n    </p>\n  </TooltipStyled>\n);\n\nResultsAvgByYear.propTypes = {\n  winColor: PropTypes.string.isRequired,\n  drawColor: PropTypes.string.isRequired,\n  lossColor: PropTypes.string.isRequired,\n  payload: PropTypes.shape({\n    years: PropTypes.number.isRequired,\n    matches: PropTypes.number.isRequired,\n    wins: PropTypes.number.isRequired,\n    winsAvg: PropTypes.number.isRequired,\n    draws: PropTypes.number.isRequired,\n    drawsAvg: PropTypes.number.isRequired,\n    losses: PropTypes.number.isRequired,\n    lossesAvg: PropTypes.number.isRequired\n  })\n};\n\nexport default ResultsAvgByYear;\n","import ValuesForAndAgainst from './valuesForAndAgainst';\n\nexport default ValuesForAndAgainst;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ValuesForAndAgainstTypes } from './valuesForAndAgainst.types';\nimport TooltipStyled from 'components/charts/components/tooltip/tooltip.styled';\n\nconst ValuesForAndAgainst = ({ versus, valueFor, valueAgainst }: ValuesForAndAgainstTypes) => (\n  <TooltipStyled>\n    <h4>Vs. {versus}</h4>\n    <p>A Favor: {valueFor}</p>\n    <p>En Contra: {valueAgainst}</p>\n  </TooltipStyled>\n);\n\nValuesForAndAgainst.propTypes = {\n  versus: PropTypes.string.isRequired,\n  valueFor: PropTypes.number.isRequired,\n  valueAgainst: PropTypes.number.isRequired\n};\n\nexport default ValuesForAndAgainst;\n","import styled from 'styled-components';\n\nconst HeaderStyled = styled.header`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors?.white};\n  border-bottom: 0.1rem solid ${({ theme }) => theme.colors?.gallery};\n  display: flex;\n  top: 0;\n  padding: 2rem;\n  position: sticky;\n  z-index: 2;\n\n  @media screen and (max-width: ${({ theme }) => theme.size?.medium}) {\n    flex-flow: wrap;\n  }\n\n  & > * {\n    margin: 0.5rem;\n  }\n\n  h1 {\n    @media screen and (min-width: ${({ theme }) => theme.size?.medium}) {\n      flex-basis: 36rem;\n    }\n  }\n\n  div {\n    flex: auto;\n  }\n`;\n\nexport default HeaderStyled;\n","import HeaderStyled from './header.styled';\n\nexport default HeaderStyled;\n","import styled from 'styled-components';\n\nimport { MatchCounterStyledTypeS } from './matchCounter.types';\n\nconst MatchCounterStyled = styled.div`\n  background-color: ${({ theme, isTotal }: MatchCounterStyledTypeS) =>\n    isTotal ? theme.colors?.pastelGreen : theme.colors?.alabaster};\n  border-radius: ${({ theme }) => theme.radius?.big};\n  color: ${({ theme, isTotal }: MatchCounterStyledTypeS) =>\n    isTotal ? theme.colors?.white : theme.colors?.blueZodiac};\n  line-height: 1;\n  padding: ${({ theme }) => theme.gutter?.small};\n\n  h4 {\n    font-size: 1rem;\n    margin: 0;\n    text-transform: uppercase;\n\n    @media screen and (min-width: ${({ theme }) => theme.size?.large}) {\n      font-size: ${({ theme }) => theme.fonts?.sizes?.default};\n    }\n  }\n\n  h5 {\n    font-size: 1.4rem;\n    font-weight: 400;\n    margin: ${({ theme }) => `${theme.gutter?.small} 0 0`};\n\n    @media screen and (min-width: ${({ theme }) => theme.size?.large}) {\n      font-size: ${({ theme }) => theme.fonts?.sizes?.percentage};\n    }\n  }\n\n  small {\n    font-size: ${({ theme }) => theme.fonts?.sizes?.small};\n  }\n\n  progress[value] {\n    appearance: none;\n    border: none;\n    height: 4px;\n    width: 100%;\n\n    &::-webkit-progress-value {\n      background-color: ${({ theme }) => theme.colors?.pastelGreen};\n      border-radius: ${({ theme }) => theme.radius?.small};\n    }\n\n    &::-moz-progress-bar {\n      background-color: ${({ theme }) => theme.colors?.pastelGreen};\n      border-radius: ${({ theme }) => theme.radius?.small};\n    }\n\n    &::-webkit-progress-bar {\n      background-color: ${({ theme }) => theme.colors?.white};\n      box-shadow: 0;\n      border-radius: ${({ theme }) => theme.radius?.small};\n    }\n  }\n`;\n\nexport default MatchCounterStyled;\n","import MatchCounter from './matchCounter';\n\nexport default MatchCounter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MatchCounterStyled from './matchCounter.styled';\nimport { MatchCounterTypes } from './matchCounter.types';\n\nconst MatchCounter = ({ title, amount, isTotal }: MatchCounterTypes) => {\n  const amountFormatted = (amount * 100).toFixed(2);\n  return (\n    <MatchCounterStyled isTotal={!!isTotal}>\n      <h4>{title}</h4>\n      <h5>{isTotal ? amount : `${amountFormatted}%`}</h5>\n      {isTotal ? (\n        <small>[en total]</small>\n      ) : (\n        <progress value={amountFormatted} max=\"100\">\n          progress: {amountFormatted}\n        </progress>\n      )}\n    </MatchCounterStyled>\n  );\n};\n\nMatchCounter.propTypes = {\n  title: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  isTotal: PropTypes.bool\n};\n\nexport default MatchCounter;\n","import styled from 'styled-components';\n\nconst ContentStyled = styled.div`\n  display: flex;\n  height: min-content;\n  top: 0;\n\n  @media screen and (max-width: ${({ theme }) => theme.size?.large}) {\n    flex-direction: column-reverse;\n  }\n\n  aside,\n  main {\n    padding: 0 2rem;\n  }\n\n  aside {\n    @media screen and (max-width: ${({ theme }) => theme.size?.large}) {\n      margin: 0 2rem;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.size?.large}) {\n      height: calc(100vh - 18rem);\n      border-right: 1px solid ${({ theme }) => theme.colors?.gallery};\n      flex-basis: 38rem;\n      top: 13.8rem;\n      position: sticky;\n      overflow-y: scroll;\n    }\n\n    @media screen and (max-width: ${({ theme }) => theme.size?.small}) {\n      margin: 0;\n    }\n\n    h2 {\n      @media screen and (max-width: ${({ theme }) => theme.size?.medium}) {\n        border-top: 1px solid ${({ theme }) => theme.colors?.gallery};\n      }\n    }\n  }\n\n  main {\n    @media screen and (min-width: ${({ theme }) => theme.size?.large}) {\n      flex-basis: calc(100% - 38rem);\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.size?.medium}) {\n      display: flex;\n      flex-basis: 100%;\n      flex-wrap: wrap;\n      justify-content: center;\n    }\n\n    @media screen and (max-width: ${({ theme }) => theme.size?.small}) {\n      padding: 0;\n    }\n\n    section {\n      margin: 0 2rem;\n      width: calc(100% - 4rem);\n      @media screen and (min-width: ${({ theme }) => theme.size?.medium}) {\n        width: calc(50% - 4rem);\n      }\n    }\n  }\n`;\n\nexport default ContentStyled;\n","import ContentStyled from './content.styled';\n\nexport default ContentStyled;\n","import styled from 'styled-components';\n\nconst BoxTitleStyled = styled.h2`\n  background-color: ${({ theme }) => theme.colors?.white};\n  font-size: ${({ theme }) => theme.fonts?.sizes?.subTitle};\n  top: 100px;\n  padding: 2rem 0;\n  position: sticky;\n  z-index: 1;\n\n  @media screen and (min-width: ${({ theme }) => theme.size?.large}) {\n    top: 0;\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.size?.small}) {\n    top: 180px;\n  }\n`;\n\nexport default BoxTitleStyled;\n","import BoxTitleStyled from './boxTitle.styled';\n\nexport default BoxTitleStyled;\n","import { FilterMatchesTypes } from './filtersMatches.types';\n\nexport const byPlayed = (match: FilterMatchesTypes) => match.results !== 'Not played';\nexport const byNotPLayed = (match: FilterMatchesTypes) => match.results === 'Not played';\n","import { addTypesToMatchTypes } from './addTypesToMatch.types';\n\nexport const addTypesToMatch = (match: addTypesToMatchTypes) => ({\n  ...match,\n  at: match.at,\n  results: match.results\n});\n","import { AtTypes, ItemTypes, DataTypes } from './formatMatchesAvgByAt.types';\n\nexport const byAt = (item: ItemTypes, at: AtTypes) => item.description.includes(at);\n\nexport const itemFormatted = (item: ItemTypes, at: AtTypes) => ({\n  name: item.description.replace(`,${at}`, ''),\n  value: Number(item.value.toFixed(2))\n});\n\nexport const formatMatchesAvgByAt = (data: ItemTypes[]) => {\n  const home: DataTypes = { name: 'Local' };\n  data\n    .filter((item) => byAt(item, 'Home'))\n    .map((item) => itemFormatted(item, 'Home'))\n    .map((item) => (home[item.name] = item.value));\n\n  const abroad: DataTypes = { name: 'Visita' };\n  data\n    .filter((item) => byAt(item, 'Abroad'))\n    .map((item) => itemFormatted(item, 'Abroad'))\n    .map((item) => (abroad[item.name] = item.value))\n    .map((item) => ({ ...(item as any), name: 'Visita' }));\n\n  const neutral: DataTypes = { name: 'Neutral' };\n  data\n    .filter((item) => byAt(item, 'Neutral'))\n    .map((item) => itemFormatted(item, 'Neutral'))\n    .map((item) => (neutral[item.name] = item.value));\n\n  return [home, abroad, neutral];\n};\n","import Ven from './ven';\n\nexport default Ven;\n","import React, { Fragment } from 'react';\n\nimport matches from 'data/ven/full-matches.json';\nimport resultsAvg from 'data/ven/results-avg.json';\nimport goalsByTeam from 'data/ven/goals-by-team.json';\nimport goalsAvgByYear from 'data/ven/goals-avg-by-year.json';\nimport resultsAvgByYear from 'data/ven/results-avg-by-year.json';\nimport matchesAvgByAt from 'data/ven/matches-avg-by-at.json';\nimport matchWithMostGoalsFor from 'data/ven/most-goals-for.json';\nimport matchWithMostGoalsAgainst from 'data/ven/most-goals-against.json';\nimport winsByTeam from 'data/ven/wins-by-team.json';\nimport drawsByTeam from 'data/ven/draws-by-team.json';\nimport lossesByTeam from 'data/ven/losses-by-team.json';\nimport goalsMaxAndMin from 'data/ven/goals-max-min.json';\n\nimport {\n  Match,\n  Title,\n  Charts,\n  HeaderStyled,\n  MatchCounter,\n  ContentStyled,\n  BoxTitleStyled\n} from 'components';\nimport {\n  barChartItems,\n  areaChartItems,\n  goalsAvgAreaChartItems,\n  goalsByTeamAreaChartItems,\n  goalsMaxAndMinAreaChartItems,\n  winsByTeamItems,\n  drawsByTeamItems,\n  lossesByTeamItems\n} from 'config';\nimport { AreaChartItemsTypes } from 'components/charts/components/areaChart/areaChart.types';\nimport { byPlayed, byNotPLayed, formatMatchesAvgByAt, addTypesToMatch } from 'utils';\n\nconst Ven = () => {\n  const played = matches.filter(byPlayed);\n  const notPlayed = matches.filter(byNotPLayed);\n  const results = resultsAvg[0];\n  const historicalMatches = [...matchWithMostGoalsFor, ...matchWithMostGoalsAgainst];\n  const MatchesDataFormattedAvgByAt = formatMatchesAvgByAt(matchesAvgByAt);\n\n  return (\n    <Fragment>\n      <HeaderStyled>\n        <Title team=\"Venezuela\" />\n        <MatchCounter title=\"Partidos\" amount={results.matchesTotal} isTotal />\n        <MatchCounter title=\"Victorias\" amount={results.winAvg} />\n        <MatchCounter title=\"Empates\" amount={results.drawAvg} />\n        <MatchCounter title=\"Derrotas\" amount={results.lossAvg} />\n        <MatchCounter title=\"No jugados\" amount={results.notPlayedAvg} />\n      </HeaderStyled>\n      <ContentStyled>\n        <aside>\n          {notPlayed.length >= 1 && <BoxTitleStyled>Próximos partidos</BoxTitleStyled>}\n          {notPlayed.map((match, index) => (\n            <Match key={index} {...addTypesToMatch(match as any)} />\n          ))}\n          <BoxTitleStyled>Goleadas históricas</BoxTitleStyled>\n          {historicalMatches.map((match, index) => (\n            <Match key={index} {...addTypesToMatch(match as any)} />\n          ))}\n          <BoxTitleStyled>Últimos partidos</BoxTitleStyled>\n          {played.map((match, index) => (\n            <Match key={index} {...addTypesToMatch(match as any)} />\n          ))}\n        </aside>\n        <main>\n          <section>\n            <header>\n              <BoxTitleStyled>Promedio de Resultados por año</BoxTitleStyled>\n            </header>\n            <Charts.AreaChart\n              data={resultsAvgByYear as []}\n              datakey=\"years\"\n              items={areaChartItems as AreaChartItemsTypes}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <Charts.Tooltip.ResultsAvgByYear\n                    payload={payload[0].payload}\n                    winColor={payload[0].fill}\n                    drawColor={payload[1].fill}\n                    lossColor={payload[2].fill}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <BoxTitleStyled>Promedio de Goles por año</BoxTitleStyled>\n            </header>\n            <Charts.AreaChart\n              data={goalsAvgByYear as []}\n              datakey=\"years\"\n              items={goalsAvgAreaChartItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <Charts.Tooltip.GoalsAvgByYear\n                    payload={payload[0].payload}\n                    gfColor={payload[0].fill}\n                    gaColor={payload[1].fill}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <BoxTitleStyled>Promedio de resultados</BoxTitleStyled>\n            </header>\n            <Charts.BarChart\n              data={MatchesDataFormattedAvgByAt}\n              xAxis=\"name\"\n              items={barChartItems}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <Charts.Tooltip.ResultsAvg\n                    name={payload[0].payload.name}\n                    win={payload[0].payload.Win}\n                    draw={payload[0].payload.Draw}\n                    loss={payload[0].payload.Loss}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <BoxTitleStyled>Goles por equipo</BoxTitleStyled>\n            </header>\n            <Charts.BarChart\n              data={goalsByTeam as []}\n              xAxis=\"versus\"\n              items={goalsByTeamAreaChartItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <Charts.Tooltip.ValuesForAndAgainst\n                    versus={payload[0].payload.versus}\n                    valueFor={payload[0].payload.gf_sum}\n                    valueAgainst={payload[0].payload.ga_sum}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <BoxTitleStyled>\n                Mayor y menor cantidad de goles contra un equipo en un partido\n              </BoxTitleStyled>\n            </header>\n            <Charts.BarChart\n              data={goalsMaxAndMin as []}\n              xAxis=\"versus\"\n              items={goalsMaxAndMinAreaChartItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <Charts.Tooltip.ValuesForAndAgainst\n                    versus={payload[0].payload.versus}\n                    valueFor={payload[0].payload.gf_max}\n                    valueAgainst={payload[0].payload.ga_max}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <BoxTitleStyled>Victorias por equipo</BoxTitleStyled>\n            </header>\n            <Charts.BarChart\n              data={winsByTeam as []}\n              xAxis=\"versus\"\n              items={winsByTeamItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <Charts.Tooltip.ByTeam\n                    versus={payload[0].payload.versus}\n                    name={payload[0].name}\n                    type={payload[0].payload['wins']}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <BoxTitleStyled>Empates por equipo</BoxTitleStyled>\n            </header>\n            <Charts.BarChart\n              data={drawsByTeam as []}\n              xAxis=\"versus\"\n              items={drawsByTeamItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <Charts.Tooltip.ByTeam\n                    versus={payload[0].payload.versus}\n                    name={payload[0].name}\n                    type={payload[0].payload['draws']}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <BoxTitleStyled>Derrotas por equipo</BoxTitleStyled>\n            </header>\n            <Charts.BarChart\n              data={lossesByTeam as []}\n              xAxis=\"versus\"\n              items={lossesByTeamItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <Charts.Tooltip.ByTeam\n                    versus={payload[0].payload.versus}\n                    name={payload[0].name}\n                    type={payload[0].payload['losses']}\n                  />\n                )\n              }\n            />\n          </section>\n        </main>\n      </ContentStyled>\n    </Fragment>\n  );\n};\n\nexport default Ven;\n","import React, { FC } from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport * as Modules from 'modules';\n\nconst Routes: FC = () => (\n  <HashRouter basename=\"/\">\n    <Switch>\n      <Route exact path=\"/\" render={() => <Redirect to=\"/equipos/ven\" />} />\n      <Route exact path=\"/equipos/ven\" component={Modules.Ven} />\n      <Route path=\"*\" render={() => <div>404. Not found.</div>} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nimport { themeTypes } from 'config';\n\nconst GlobalStyles = createGlobalStyle(\n  ({ theme }: { theme: themeTypes }) => `\n    *, \n    *:after, \n    *:before {\n      box-sizing: inherit;    \n    }    \n\n    html {\n      font-size: 8px;\n      \n      @media screen and (min-width: ${theme.size?.large}) {\n        font-size: ${theme.fonts.sizes.reset};\n      }\n    }\n\n    body {\n      color: ${theme.colors.blueZodiac};\n      font-family: ${theme.fonts.family.toString()};\n      font-size: ${theme.fonts.sizes.default};\n      margin: 0;\n    }\n\n    * {\n      scroll-behavior: smooth;\n      scrollbar-width: thin;\n      \n      ::-webkit-scrollbar {\n        width: .1rem;\n      }\n  \n      ::-webkit-scrollbar-track {\n        background-color: ${theme.colors?.gallery};\n      }\n  \n      ::-webkit-scrollbar-thumb {\n        border: .1rem solid ${theme.colors?.dustyGray};\n      } \n    }\n\n    h1, h2 {\n      font-weight: 500;\n      line-height: 1.5;\n      margin: 0;\n    }\n\n    #root {\n      margin: 0 auto;\n      max-width: 180rem;\n    }\n  `\n);\n\nexport default GlobalStyles;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport * as config from 'config';\nimport Routes from 'routes';\nimport GlobalStyles from 'global.styled';\n\nconst App = () => (\n  <ThemeProvider theme={config.theme}>\n    <GlobalStyles />\n    <Routes />\n  </ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {\n      'Service-Worker': 'script'\n    }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}