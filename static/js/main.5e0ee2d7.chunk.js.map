{"version":3,"sources":["config/theme/index.ts","config/charts/items.ts","config/index.ts","utils/filtersMatches/filtersMatches.ts","utils/addTypesToMatch/addTypesToMatch.ts","utils/formatMatchesAvgByAt/formatMatchesAvgByAt.ts","components/match/match.styled.tsx","components/match/components/info/info.styled.tsx","components/match/components/info/index.ts","components/match/components/info/info.tsx","components/match/components/finalResults/finalResults.styled.tsx","components/match/components/finalResults/index.ts","components/match/components/finalResults/finalResults.tsx","components/match/index.ts","components/match/match.tsx","components/title/title.styled.tsx","components/title/index.ts","components/title/title.tsx","components/charts/components/barChart/index.ts","components/charts/components/barChart/barChart.tsx","components/charts/components/areaChart/index.ts","components/charts/components/areaChart/areaChart.tsx","components/charts/components/tooltip/tooltip.styled.tsx","components/charts/components/tooltip/components/byTeam/byTeam.tsx","components/charts/components/tooltip/components/byTeam/index.ts","components/charts/components/tooltip/components/resultsAvg/index.ts","components/charts/components/tooltip/components/resultsAvg/resultsAvg.tsx","components/charts/components/tooltip/components/goalsAvgByYear/index.ts","components/charts/components/tooltip/components/goalsAvgByYear/goalsAvgByYear.tsx","components/charts/components/tooltip/components/resultsAvgByYear/index.ts","components/charts/components/tooltip/components/resultsAvgByYear/resultsAvgByYear.tsx","components/charts/components/tooltip/components/valuesForAndAgainst/index.ts","components/charts/components/tooltip/components/valuesForAndAgainst/valuesForAndAgainst.tsx","components/header/header.styled.tsx","components/header/index.ts","components/matchCounter/matchCounter.styled.tsx","components/matchCounter/index.ts","components/matchCounter/matchCounter.tsx","components/content/content.styled.tsx","components/content/index.ts","components/boxTitle/boxTitle.styled.tsx","components/boxTitle/index.ts","modules/ven/index.ts","modules/ven/ven.tsx","routes.tsx","global.styled.tsx","App.tsx","serviceWorker.ts","index.tsx","config/theme/theme.ts"],"names":["barChartItems","name","fill","theme","colors","pastelGreen","blueZodiac","japonica","areaChartItems","goalsAvgAreaChartItems","goalsByTeamAreaChartItems","goalsMaxAndMinAreaChartItems","winsByTeamItems","drawsByTeamItems","lossesByTeamItems","byPlayed","match","results","byNotPLayed","addTypesToMatch","at","byAt","item","description","includes","itemFormatted","replace","value","Number","toFixed","MatchStyled","styled","div","gallery","InfoStyled","size","medium","dustyGray","Info","versus","dates","hours","events","phases","timezone","Intl","DateTimeFormat","resolvedOptions","locale","tz","timeZone","datetimeWithYourTZAndLocale","DateTime","fromISO","zone","setZone","setLocale","toFormat","FinalResultsStyled","alabaster","radius","big","FinalResults","gf","ga","data-testid","data-result","Match","props","TitleStyled","h1","fonts","sizes","title","subTitle","Title","team","BarChart","data","items","xAxis","customTooltip","minWidth","minHeight","strokeDasharray","dataKey","content","map","index","key","maxBarSize","stackId","AreaChart","datakey","stackOffset","type","stroke","TooltipStyled","ByTeam","prototypes","Proptypes","string","oneOf","number","isRequired","ResultsAvg","win","draw","loss","style","color","GoalsAvgByYear","payload","gfColor","gaColor","years","matches","gfAvg","gaAvg","ResultsAvgByYear","winColor","drawColor","lossColor","wins","winsAvg","draws","drawsAvg","losses","lossesAvg","ValuesForAndAgainst","valueFor","valueAgainst","HeaderStyled","header","white","MatchCounterStyled","isTotal","gutter","small","large","default","percentage","MatchCounter","amount","amountFormatted","max","ContentStyled","BoxTitleStyled","h2","Ven","played","filter","utils","notPlayed","historicalMatches","MatchesDataFormattedAvgByAt","home","abroad","neutral","matchesTotal","winAvg","drawAvg","lossAvg","notPlayedAvg","length","config","active","Tooltip","Win","Draw","Loss","gf_sum","ga_sum","gf_max","ga_max","Routes","basename","exact","path","render","to","component","Modules","GlobalStyles","createGlobalStyle","reset","family","toString","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","goals","xl"],"mappings":"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","file":"static/js/main.5e0ee2d7.chunk.js","sourcesContent":["export * from './theme';\nexport * from './theme.type';\n","import { theme } from 'config/theme';\n\nexport const barChartItems = [\n  { name: 'Win', fill: theme.colors.pastelGreen },\n  { name: 'Draw', fill: theme.colors.blueZodiac },\n  { name: 'Loss', fill: theme.colors.japonica }\n];\n\nexport const areaChartItems = [\n  { name: 'wins', fill: theme.colors.pastelGreen },\n  { name: 'draws', fill: theme.colors.blueZodiac },\n  { name: 'losses', fill: theme.colors.japonica }\n];\n\nexport const goalsAvgAreaChartItems = [\n  { name: 'gf', fill: theme.colors.pastelGreen },\n  { name: 'ga', fill: theme.colors.blueZodiac }\n];\n\nexport const goalsByTeamAreaChartItems = [\n  { name: 'gf_sum', fill: theme.colors.pastelGreen },\n  { name: 'ga_sum', fill: theme.colors.blueZodiac }\n];\n\nexport const goalsMaxAndMinAreaChartItems = [\n  { name: 'gf_max', fill: theme.colors.pastelGreen },\n  { name: 'ga_max', fill: theme.colors.blueZodiac }\n];\n\nexport const winsByTeamItems = [{ name: 'wins', fill: theme.colors.pastelGreen }];\nexport const drawsByTeamItems = [{ name: 'draws', fill: theme.colors.blueZodiac }];\nexport const lossesByTeamItems = [{ name: 'losses', fill: theme.colors.japonica }];\n","export * from './theme';\nexport * from './charts';\n","import { FilterMatchesTypes } from './filtersMatches.types';\n\nexport const byPlayed = (match: FilterMatchesTypes) => match.results !== 'Not played';\nexport const byNotPLayed = (match: FilterMatchesTypes) => match.results === 'Not played';\n","import { addTypesToMatchTypes } from './addTypesToMatch.types';\n\nexport const addTypesToMatch = (match: addTypesToMatchTypes) => ({\n  ...match,\n  at: match.at,\n  results: match.results\n});\n","import { AtTypes, ItemTypes, DataTypes } from './formatMatchesAvgByAt.types';\n\nexport const byAt = (item: ItemTypes, at: AtTypes) => item.description.includes(at);\n\nexport const itemFormatted = (item: ItemTypes, at: AtTypes) => ({\n  name: item.description.replace(`,${at}`, ''),\n  value: Number(item.value.toFixed(2))\n});\n\nexport const formatMatchesAvgByAt = (data: ItemTypes[]) => {\n  const home: DataTypes = { name: 'Local' };\n  data\n    .filter((item) => byAt(item, 'Home'))\n    .map((item) => itemFormatted(item, 'Home'))\n    .map((item) => (home[item.name] = item.value));\n\n  const abroad: DataTypes = { name: 'Visita' };\n  data\n    .filter((item) => byAt(item, 'Abroad'))\n    .map((item) => itemFormatted(item, 'Abroad'))\n    .map((item) => (abroad[item.name] = item.value))\n    .map((item) => ({ ...(item as any), name: 'Visita' }));\n\n  const neutral: DataTypes = { name: 'Neutral' };\n  data\n    .filter((item) => byAt(item, 'Neutral'))\n    .map((item) => itemFormatted(item, 'Neutral'))\n    .map((item) => (neutral[item.name] = item.value));\n\n  return [home, abroad, neutral];\n};\n","import styled from 'styled-components';\n\nconst MatchStyled = styled.div`\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.colors?.gallery};\n  display: flex;\n  padding: 1rem 1.5rem;\n\n  &:last-of-type {\n    border-bottom: 0;\n  }\n`;\n\nexport default MatchStyled;\n","import styled from 'styled-components';\n\nconst InfoStyled = styled.div`\n  p {\n    margin: 0;\n  }\n\n  h4 {\n    font-size: 1.4rem;\n    margin: 0 0 0.4rem;\n    text-transform: uppercase;\n\n    @media screen and (min-width: ${({ theme }) => theme.size?.medium}) {\n      font-size: 1.2rem;\n    }\n\n    small {\n      @media screen and (max-width: ${({ theme }) => theme.size?.medium}) {\n        display: block;\n      }\n    }\n  }\n\n  small  {\n    color: ${({ theme }) => theme.colors?.dustyGray};\n    font-size: 1.2rem;\n    font-weight: 500;\n    text-transform: capitalize;\n  }\n`;\n\nexport default InfoStyled;\n","import Info from './info';\n\nexport default Info;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DateTime } from 'luxon';\n\nimport InfoStyled from './info.styled';\nimport { InfoTypes } from './info.types';\n\nconst Info = ({\n  versus,\n  dates,\n  hours,\n  events,\n  phases,\n  timezone\n}: InfoTypes) => {\n  const { locale, timeZone: tz } = Intl.DateTimeFormat().resolvedOptions();\n  const datetime = DateTime.fromISO(\n    `${dates ? dates : ''}${hours ? `T${hours}` : ''}`,\n    { zone: timezone }\n  );\n  const datetimeWithYourTZAndLocale = datetime\n    .setZone(tz)\n    .setLocale(locale)\n    .toFormat(`dd LLL, yyyy. ${hours ? 'HH:mm' : ''}`);\n  return (\n    <InfoStyled>\n      <h4>\n        {versus} <small>{datetimeWithYourTZAndLocale}</small>\n      </h4>\n      <p>\n        <small>{events}</small> <small>{phases}</small>\n      </p>\n    </InfoStyled>\n  );\n};\n\nInfo.propTypes = {\n  versus: PropTypes.string.isRequired,\n  dates: PropTypes.string.isRequired,\n  hours: PropTypes.string,\n  events: PropTypes.string.isRequired,\n  phases: PropTypes.string.isRequired,\n  timezone: PropTypes.string.isRequired\n};\n\nexport default Info;\n","import styled from 'styled-components';\n\nconst FinalResultsStyled = styled.div`\n  background-color: ${({ theme }) => theme.colors?.alabaster};\n  border-radius: ${({ theme }) => theme.radius?.big};\n  flex-basis: 6rem;\n  font-size: 1.8rem;\n  font-weight: 700;\n  margin-right: 1rem;\n  min-width: 6rem;\n  padding: 1.2rem 0;\n  position: relative;\n\n  &:before {\n    content: '';\n    border-radius: 100%;\n    display: block;\n    height: 1rem;\n    top: -0.4rem;\n    left: -0.4rem;\n    position: absolute;\n    width: 1rem;\n  }\n\n  &[data-result='Win']:before {\n    background-color: ${({ theme }) => theme.colors?.pastelGreen};\n  }\n\n  &[data-result='Loss']:before {\n    background-color: ${({ theme }) => theme.colors?.japonica};\n  }\n\n  &[data-result='Draw']:before {\n    display: none;\n  }\n\n  ul {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    place-content: space-around;\n  }\n\n  li {\n    list-style: none;\n  }\n`;\n\nexport default FinalResultsStyled;\n","import FinalResults from './finalResults';\n\nexport default FinalResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FinalResultsStyled from './finalResults.styled';\nimport { AtTypes, ResultsTypes, FinalResultsTypes } from './finalResults.types';\n\nconst FinalResults = ({ results, at, gf, ga }: FinalResultsTypes) => (\n  <FinalResultsStyled data-testid=\"final-result\" data-result={results}>\n    <ul>\n      <li>{at === 'Home' ? gf : ga}</li>\n      <li>{at === 'Home' ? ga : gf}</li>\n    </ul>\n  </FinalResultsStyled>\n);\n\nFinalResults.propTypes = {\n  at: PropTypes.oneOf<AtTypes>(['Home', 'Abroad', 'Neutral']).isRequired,\n  results: PropTypes.oneOf<ResultsTypes>(['Not played', 'Loss', 'Win', 'Draw'])\n    .isRequired,\n  gf: PropTypes.number.isRequired,\n  ga: PropTypes.number.isRequired\n};\n\nexport default FinalResults;\n","import Match from './match';\n\nexport default Match;\n","import React from 'react';\n\nimport MatchStyled from './match.styled';\nimport { MatchTypes } from './match.types';\nimport * as Components from './components';\n\nconst Match = (props: MatchTypes) => (\n  <MatchStyled>\n    {props.results !== 'Not played' && (\n      <Components.FinalResults\n        results={props.results}\n        at={props.at}\n        gf={props.gf}\n        ga={props.ga}\n      />\n    )}\n    <Components.Info\n      versus={props.versus}\n      dates={props.dates}\n      hours={props.hours}\n      events={props.events}\n      phases={props.phases}\n      timezone={props.timezone}\n    />\n  </MatchStyled>\n);\n\nMatch.propTypes = {\n  ...Components.Info.propTypes,\n  ...Components.FinalResults.propTypes\n};\n\nexport default Match;\n","import styled from 'styled-components';\n\nconst TitleStyled = styled.h1`\n  font-size: ${({ theme }) => theme.fonts?.sizes?.title};\n\n  span {\n    color: ${({ theme }) => theme.colors?.dustyGray};\n    display: block;\n    font-size: ${({ theme }) => theme.fonts?.sizes?.subTitle};\n  }\n`;\n\nexport default TitleStyled;\n","import Title from './title';\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TitleTypes from './title.types';\nimport TitleStyled from './title.styled';\n\nconst Title = ({ team }: TitleTypes) => (\n  <TitleStyled>\n    {team} <span>Selección de Fútbol</span>\n  </TitleStyled>\n);\n\nTitle.propTypes = {\n  team: PropTypes.string.isRequired\n};\n\nexport default Title;\n","import BarChart from './barChart';\n\nexport default BarChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { XAxis, CartesianGrid, Tooltip, BarChart, Bar, ResponsiveContainer } from 'recharts';\n\nimport { BarChartTypes } from './barChart.types';\n\nconst WrapperBarChart = ({ data, items, xAxis, customTooltip }: BarChartTypes) => (\n  <div>\n    <ResponsiveContainer minWidth=\"600\" minHeight=\"200px\">\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey={xAxis} />\n        <Tooltip content={customTooltip} />\n        {items.map((item, index) => (\n          <Bar key={index} maxBarSize={40} dataKey={item.name} stackId=\"a\" fill={item.fill} />\n        ))}\n      </BarChart>\n    </ResponsiveContainer>\n  </div>\n);\n\nWrapperBarChart.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      fill: PropTypes.string.isRequired\n    }).isRequired\n  ),\n  data: PropTypes.array.isRequired,\n  xAxis: PropTypes.string.isRequired\n};\n\nexport default WrapperBarChart;\n","import AreaChart from './areaChart';\n\nexport default AreaChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AreaChart, Area, XAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nimport { AreaChartTypes } from './areaChart.types';\n\nconst WrapperAreaChart = ({ data, items, datakey, customTooltip }: AreaChartTypes) => (\n  <div>\n    <ResponsiveContainer minWidth=\"600\" minHeight=\"200px\">\n      <AreaChart data={data} stackOffset=\"silhouette\">\n        <CartesianGrid strokeDasharray=\"2 2\" />\n        <XAxis dataKey={datakey} />\n        <Tooltip content={customTooltip} />\n        {items.map((item, index) => (\n          <Area\n            key={index}\n            type=\"monotone\"\n            dataKey={item.name}\n            stackId=\"1\"\n            fill={item.fill}\n            stroke={item.fill}\n          />\n        ))}\n      </AreaChart>\n    </ResponsiveContainer>\n  </div>\n);\n\nWrapperAreaChart.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      fill: PropTypes.string.isRequired\n    }).isRequired\n  ),\n  data: PropTypes.array.isRequired,\n  datakey: PropTypes.string.isRequired\n};\n\nexport default WrapperAreaChart;\n","import styled from 'styled-components';\n\nconst TooltipStyled = styled.div`\n  background-color: white;\n  border-radius: 1rem;\n  padding: 0.8rem 1.5rem;\n\n  h4 {\n    font-size: 1.4rem;\n    margin: 1rem 0;\n  }\n\n  p {\n    font-size: 1.2rem;\n    margin: 0 0 1rem;\n  }\n\n  small {\n    background-color: #f7f7f7;\n    border-radius: 1rem;\n    font-weight: 700;\n    padding: 0.5rem;\n    margin-left: 0.4rem;\n  }\n`;\n\nexport default TooltipStyled;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nimport { ByTeamTypes } from './byTeam.types';\nimport TooltipStyled from 'components/charts/components/tooltip/tooltip.styled';\n\nconst ByTeam = ({ versus, name, type }: ByTeamTypes) => {\n  let title;\n  switch (name) {\n    case 'wins':\n      title = 'Victorias';\n      break;\n    case 'draws':\n      title = 'Empates';\n      break;\n    default:\n      title = 'Derrotas';\n      break;\n  }\n  return (\n    <TooltipStyled>\n      <h4>Vs. {versus}</h4>\n      <p>\n        {title}: {type}\n      </p>\n    </TooltipStyled>\n  );\n};\n\nByTeam.prototypes = {\n  versus: Proptypes.string,\n  name: Proptypes.oneOf(['wins', 'draws', 'losses']),\n  type: Proptypes.number.isRequired\n};\n\nexport default ByTeam;\n","import ByTeam from './byTeam';\n\nexport default ByTeam;\n","import ResultsAvg from './resultsAvg';\n\nexport default ResultsAvg;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { resultsAvg } from './resultsAvg.types';\nimport TooltipStyled from 'components/charts/components/tooltip/tooltip.styled';\n\nconst ResultsAvg = ({ name, win, draw, loss }: resultsAvg) => (\n  <TooltipStyled>\n    <h4>\n      {name}:<small>{win + draw + loss}% de partidos</small>\n    </h4>\n    <p style={{ color: '#D76D6D' }}>Derrota: {loss}%</p>\n    <p style={{ color: '#0A1130' }}>Empate: {draw}%</p>\n    <p style={{ color: '#6DD799' }}>Victoria: {win}%</p>\n  </TooltipStyled>\n);\n\nResultsAvg.propTypes = {\n  name: PropTypes.string.isRequired,\n  win: PropTypes.number.isRequired,\n  draw: PropTypes.number.isRequired,\n  loss: PropTypes.number.isRequired\n};\n\nexport default ResultsAvg;\n","import GoalsAvgByYear from './goalsAvgByYear';\n\nexport default GoalsAvgByYear;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { GoalsAvgByYearTypes } from './goalsAvgByYear.types';\nimport TooltipStyled from 'components/charts/components/tooltip/tooltip.styled';\n\nconst GoalsAvgByYear = ({ payload, gfColor, gaColor }: GoalsAvgByYearTypes) => (\n  <TooltipStyled>\n    <h4>\n      En {payload?.years} jugó {payload?.matches} partidos\n    </h4>\n    <p style={{ color: gfColor }}>\n      A Favor: {payload.gf}\n      <small> {payload.gfAvg.toFixed(2)} por partido</small>\n    </p>\n    <p style={{ color: gaColor }}>\n      En Contra: {payload.ga}\n      <small> {payload.gaAvg.toFixed(2)} por partido</small>\n    </p>\n  </TooltipStyled>\n);\n\nGoalsAvgByYear.propTypes = {\n  gfColor: PropTypes.string.isRequired,\n  gaColor: PropTypes.string.isRequired,\n  payload: PropTypes.shape({\n    years: PropTypes.number.isRequired,\n    matches: PropTypes.number.isRequired,\n    gf: PropTypes.number.isRequired,\n    gfAvg: PropTypes.number.isRequired,\n    ga: PropTypes.number.isRequired,\n    gaAvg: PropTypes.number.isRequired\n  })\n};\n\nexport default GoalsAvgByYear;\n","import ResultsAvgByYear from './resultsAvgByYear';\n\nexport default ResultsAvgByYear;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { resultsAvgByYearTypes } from './resultsAvgByYear.types';\nimport TooltipStyled from 'components/charts/components/tooltip/tooltip.styled';\n\nconst ResultsAvgByYear = ({ winColor, drawColor, lossColor, payload }: resultsAvgByYearTypes) => (\n  <TooltipStyled>\n    <h4>\n      En {payload.years} jugó {payload.matches} partidos\n    </h4>\n    <p style={{ color: winColor }}>\n      Victorias: {payload.wins}\n      <small> {payload.winsAvg.toFixed(2)}%</small>\n    </p>\n    <p style={{ color: drawColor }}>\n      Empates: {payload.draws}\n      <small> {payload.drawsAvg.toFixed(2)}%</small>\n    </p>\n    <p style={{ color: lossColor }}>\n      Derrotas: {payload.losses}\n      <small> {payload.lossesAvg.toFixed(2)}%</small>\n    </p>\n  </TooltipStyled>\n);\n\nResultsAvgByYear.propTypes = {\n  winColor: PropTypes.string.isRequired,\n  drawColor: PropTypes.string.isRequired,\n  lossColor: PropTypes.string.isRequired,\n  payload: PropTypes.shape({\n    years: PropTypes.number.isRequired,\n    matches: PropTypes.number.isRequired,\n    wins: PropTypes.number.isRequired,\n    winsAvg: PropTypes.number.isRequired,\n    draws: PropTypes.number.isRequired,\n    drawsAvg: PropTypes.number.isRequired,\n    losses: PropTypes.number.isRequired,\n    lossesAvg: PropTypes.number.isRequired\n  })\n};\n\nexport default ResultsAvgByYear;\n","import ValuesForAndAgainst from './valuesForAndAgainst';\n\nexport default ValuesForAndAgainst;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ValuesForAndAgainstTypes } from './valuesForAndAgainst.types';\nimport TooltipStyled from 'components/charts/components/tooltip/tooltip.styled';\n\nconst ValuesForAndAgainst = ({ versus, valueFor, valueAgainst }: ValuesForAndAgainstTypes) => (\n  <TooltipStyled>\n    <h4>Vs. {versus}</h4>\n    <p>A Favor: {valueFor}</p>\n    <p>En Contra: {valueAgainst}</p>\n  </TooltipStyled>\n);\n\nValuesForAndAgainst.propTypes = {\n  versus: PropTypes.string.isRequired,\n  valueFor: PropTypes.number.isRequired,\n  valueAgainst: PropTypes.number.isRequired\n};\n\nexport default ValuesForAndAgainst;\n","import styled from 'styled-components';\n\nconst HeaderStyled = styled.header`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors?.white};\n  border-bottom: 0.1rem solid ${({ theme }) => theme.colors?.gallery};\n  display: flex;\n  top: 0;\n  padding: 2rem;\n  position: sticky;\n  z-index: 2;\n\n  @media screen and (max-width: ${({ theme }) => theme.size?.medium}) {\n    flex-flow: wrap;\n  }\n\n  & > * {\n    margin: 0.5rem;\n  }\n\n  h1 {\n    @media screen and (min-width: ${({ theme }) => theme.size?.medium}) {\n      flex-basis: 36rem;\n    }\n  }\n\n  div {\n    flex: auto;\n  }\n`;\n\nexport default HeaderStyled;\n","import HeaderStyled from './header.styled';\n\nexport default HeaderStyled;\n","import styled from 'styled-components';\n\nimport { MatchCounterStyledTypeS } from './matchCounter.types';\n\nconst MatchCounterStyled = styled.div`\n  background-color: ${({ theme, isTotal }: MatchCounterStyledTypeS) =>\n    isTotal ? theme.colors?.pastelGreen : theme.colors?.alabaster};\n  border-radius: ${({ theme }) => theme.radius?.big};\n  color: ${({ theme, isTotal }: MatchCounterStyledTypeS) =>\n    isTotal ? theme.colors?.white : theme.colors?.blueZodiac};\n  line-height: 1;\n  padding: ${({ theme }) => theme.gutter?.small};\n\n  h4 {\n    font-size: 1rem;\n    margin: 0;\n    text-transform: uppercase;\n\n    @media screen and (min-width: ${({ theme }) => theme.size?.large}) {\n      font-size: ${({ theme }) => theme.fonts?.sizes?.default};\n    }\n  }\n\n  h5 {\n    font-size: 1.4rem;\n    font-weight: 400;\n    margin: ${({ theme }) => `${theme.gutter?.small} 0 0`};\n\n    @media screen and (min-width: ${({ theme }) => theme.size?.large}) {\n      font-size: ${({ theme }) => theme.fonts?.sizes?.percentage};\n    }\n  }\n\n  small {\n    font-size: ${({ theme }) => theme.fonts?.sizes?.small};\n  }\n\n  progress[value] {\n    appearance: none;\n    border: none;\n    height: 4px;\n    width: 100%;\n\n    &::-webkit-progress-value {\n      background-color: ${({ theme }) => theme.colors?.pastelGreen};\n      border-radius: ${({ theme }) => theme.radius?.small};\n    }\n\n    &::-moz-progress-bar {\n      background-color: ${({ theme }) => theme.colors?.pastelGreen};\n      border-radius: ${({ theme }) => theme.radius?.small};\n    }\n\n    &::-webkit-progress-bar {\n      background-color: ${({ theme }) => theme.colors?.white};\n      box-shadow: 0;\n      border-radius: ${({ theme }) => theme.radius?.small};\n    }\n  }\n`;\n\nexport default MatchCounterStyled;\n","import MatchCounter from './matchCounter';\n\nexport default MatchCounter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MatchCounterStyled from './matchCounter.styled';\nimport { MatchCounterTypes } from './matchCounter.types';\n\nconst MatchCounter = ({ title, amount, isTotal }: MatchCounterTypes) => {\n  const amountFormatted = (amount * 100).toFixed(2);\n  return (\n    <MatchCounterStyled isTotal={!!isTotal}>\n      <h4>{title}</h4>\n      <h5>{isTotal ? amount : `${amountFormatted}%`}</h5>\n      {isTotal ? (\n        <small>[en total]</small>\n      ) : (\n        <progress value={amountFormatted} max=\"100\">\n          progress: {amountFormatted}\n        </progress>\n      )}\n    </MatchCounterStyled>\n  );\n};\n\nMatchCounter.propTypes = {\n  title: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  isTotal: PropTypes.bool\n};\n\nexport default MatchCounter;\n","import styled from 'styled-components';\n\nconst ContentStyled = styled.div`\n  display: flex;\n  height: min-content;\n  top: 0;\n\n  @media screen and (max-width: ${({ theme }) => theme.size?.large}) {\n    flex-direction: column-reverse;\n  }\n\n  aside,\n  main {\n    padding: 0 2rem;\n  }\n\n  aside {\n    @media screen and (max-width: ${({ theme }) => theme.size?.large}) {\n      margin: 0 2rem;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.size?.large}) {\n      height: calc(100vh - 18rem);\n      border-right: 1px solid ${({ theme }) => theme.colors?.gallery};\n      flex-basis: 38rem;\n      top: 13.8rem;\n      position: sticky;\n      overflow-y: scroll;\n    }\n\n    @media screen and (max-width: ${({ theme }) => theme.size?.small}) {\n      margin: 0;\n    }\n\n    h2 {\n      @media screen and (max-width: ${({ theme }) => theme.size?.medium}) {\n        border-top: 1px solid ${({ theme }) => theme.colors?.gallery};\n      }\n    }\n  }\n\n  main {\n    @media screen and (min-width: ${({ theme }) => theme.size?.large}) {\n      flex-basis: calc(100% - 38rem);\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.size?.medium}) {\n      display: flex;\n      flex-basis: 100%;\n      flex-wrap: wrap;\n      justify-content: center;\n    }\n\n    @media screen and (max-width: ${({ theme }) => theme.size?.small}) {\n      padding: 0;\n    }\n\n    section {\n      margin: 0 2rem;\n      width: calc(100% - 4rem);\n      @media screen and (min-width: ${({ theme }) => theme.size?.medium}) {\n        width: calc(50% - 4rem);\n      }\n    }\n  }\n`;\n\nexport default ContentStyled;\n","import ContentStyled from './content.styled';\n\nexport default ContentStyled;\n","import styled from 'styled-components';\n\nconst BoxTitleStyled = styled.h2`\n  background-color: ${({ theme }) => theme.colors?.white};\n  font-size: ${({ theme }) => theme.fonts?.sizes?.subTitle};\n  top: 100px;\n  padding: 2rem 0;\n  position: sticky;\n  z-index: 1;\n\n  @media screen and (min-width: ${({ theme }) => theme.size?.large}) {\n    top: 0;\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.size?.small}) {\n    top: 180px;\n  }\n`;\n\nexport default BoxTitleStyled;\n","import BoxTitleStyled from './boxTitle.styled';\n\nexport default BoxTitleStyled;\n","import Ven from './ven';\n\nexport default Ven;\n","import React, { Fragment } from 'react';\n\nimport * as data from 'data/ven';\nimport * as utils from 'utils';\nimport * as config from 'config';\nimport * as components from 'components';\nimport { AreaChartItemsTypes } from 'components/charts/components/areaChart/areaChart.types';\n\nconst Ven = () => {\n  const played = data.matches.filter(utils.byPlayed);\n  const notPlayed = data.matches.filter(utils.byNotPLayed);\n  const results = data.resultsAvg[0];\n  const historicalMatches = [...data.matchWithMostGoalsFor, ...data.matchWithMostGoalsAgainst];\n  const MatchesDataFormattedAvgByAt = utils.formatMatchesAvgByAt(data.matchesAvgByAt);\n\n  return (\n    <Fragment>\n      <components.HeaderStyled>\n        <components.Title team=\"Venezuela\" />\n        <components.MatchCounter title=\"Partidos\" amount={results.matchesTotal} isTotal />\n        <components.MatchCounter title=\"Victorias\" amount={results.winAvg} />\n        <components.MatchCounter title=\"Empates\" amount={results.drawAvg} />\n        <components.MatchCounter title=\"Derrotas\" amount={results.lossAvg} />\n        <components.MatchCounter title=\"No jugados\" amount={results.notPlayedAvg} />\n      </components.HeaderStyled>\n      <components.ContentStyled>\n        <aside>\n          {notPlayed.length >= 1 && (\n            <components.BoxTitleStyled>Próximos partidos</components.BoxTitleStyled>\n          )}\n          {notPlayed.map((match, index) => (\n            <components.Match key={index} {...utils.addTypesToMatch(match as any)} />\n          ))}\n          <components.BoxTitleStyled>Goleadas históricas</components.BoxTitleStyled>\n          {historicalMatches.map((match, index) => (\n            <components.Match key={index} {...utils.addTypesToMatch(match as any)} />\n          ))}\n          <components.BoxTitleStyled>Últimos partidos</components.BoxTitleStyled>\n          {played.map((match, index) => (\n            <components.Match key={index} {...utils.addTypesToMatch(match as any)} />\n          ))}\n        </aside>\n        <main>\n          <section>\n            <header>\n              <components.BoxTitleStyled>Promedio de Resultados por año</components.BoxTitleStyled>\n            </header>\n            <components.Charts.AreaChart\n              data={data.resultsAvgByYear as []}\n              datakey=\"years\"\n              items={config.areaChartItems as AreaChartItemsTypes}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <components.Charts.Tooltip.ResultsAvgByYear\n                    payload={payload[0].payload}\n                    winColor={payload[0].fill}\n                    drawColor={payload[1].fill}\n                    lossColor={payload[2].fill}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <components.BoxTitleStyled>Promedio de Goles por año</components.BoxTitleStyled>\n            </header>\n            <components.Charts.AreaChart\n              data={data.goalsAvgByYear as []}\n              datakey=\"years\"\n              items={config.goalsAvgAreaChartItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <components.Charts.Tooltip.GoalsAvgByYear\n                    payload={payload[0].payload}\n                    gfColor={payload[0].fill}\n                    gaColor={payload[1].fill}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <components.BoxTitleStyled>Promedio de resultados</components.BoxTitleStyled>\n            </header>\n            <components.Charts.BarChart\n              data={MatchesDataFormattedAvgByAt}\n              xAxis=\"name\"\n              items={config.barChartItems}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <components.Charts.Tooltip.ResultsAvg\n                    name={payload[0].payload.name}\n                    win={payload[0].payload.Win}\n                    draw={payload[0].payload.Draw}\n                    loss={payload[0].payload.Loss}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <components.BoxTitleStyled>Goles por equipo</components.BoxTitleStyled>\n            </header>\n            <components.Charts.BarChart\n              data={data.goalsByTeam as []}\n              xAxis=\"versus\"\n              items={config.goalsByTeamAreaChartItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <components.Charts.Tooltip.ValuesForAndAgainst\n                    versus={payload[0].payload.versus}\n                    valueFor={payload[0].payload.gf_sum}\n                    valueAgainst={payload[0].payload.ga_sum}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <components.BoxTitleStyled>\n                Mayor y menor cantidad de goles contra un equipo en un partido\n              </components.BoxTitleStyled>\n            </header>\n            <components.Charts.BarChart\n              data={data.goalsMaxAndMin as []}\n              xAxis=\"versus\"\n              items={config.goalsMaxAndMinAreaChartItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <components.Charts.Tooltip.ValuesForAndAgainst\n                    versus={payload[0].payload.versus}\n                    valueFor={payload[0].payload.gf_max}\n                    valueAgainst={payload[0].payload.ga_max}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <components.BoxTitleStyled>Victorias por equipo</components.BoxTitleStyled>\n            </header>\n            <components.Charts.BarChart\n              data={data.winsByTeam as []}\n              xAxis=\"versus\"\n              items={config.winsByTeamItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <components.Charts.Tooltip.ByTeam\n                    versus={payload[0].payload.versus}\n                    name={payload[0].name}\n                    type={payload[0].payload['wins']}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <components.BoxTitleStyled>Empates por equipo</components.BoxTitleStyled>\n            </header>\n            <components.Charts.BarChart\n              data={data.drawsByTeam as []}\n              xAxis=\"versus\"\n              items={config.drawsByTeamItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <components.Charts.Tooltip.ByTeam\n                    versus={payload[0].payload.versus}\n                    name={payload[0].name}\n                    type={payload[0].payload['draws']}\n                  />\n                )\n              }\n            />\n          </section>\n          <section>\n            <header>\n              <components.BoxTitleStyled>Derrotas por equipo</components.BoxTitleStyled>\n            </header>\n            <components.Charts.BarChart\n              data={data.lossesByTeam as []}\n              xAxis=\"versus\"\n              items={config.lossesByTeamItems as any}\n              customTooltip={({ active, payload }: any) =>\n                active && (\n                  <components.Charts.Tooltip.ByTeam\n                    versus={payload[0].payload.versus}\n                    name={payload[0].name}\n                    type={payload[0].payload['losses']}\n                  />\n                )\n              }\n            />\n          </section>\n        </main>\n      </components.ContentStyled>\n    </Fragment>\n  );\n};\n\nexport default Ven;\n","import React, { FC } from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport * as Modules from 'modules';\n\nconst Routes: FC = () => (\n  <HashRouter basename=\"/\">\n    <Switch>\n      <Route exact path=\"/\" render={() => <Redirect to=\"/equipos/ven\" />} />\n      <Route exact path=\"/equipos/ven\" component={Modules.Ven} />\n      <Route path=\"*\" render={() => <div>404. Not found.</div>} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nimport { themeTypes } from 'config';\n\nconst GlobalStyles = createGlobalStyle(\n  ({ theme }: { theme: themeTypes }) => `\n    *, \n    *:after, \n    *:before {\n      box-sizing: inherit;    \n    }    \n\n    html {\n      font-size: 8px;\n      \n      @media screen and (min-width: ${theme.size?.large}) {\n        font-size: ${theme.fonts.sizes.reset};\n      }\n    }\n\n    body {\n      color: ${theme.colors.blueZodiac};\n      font-family: ${theme.fonts.family.toString()};\n      font-size: ${theme.fonts.sizes.default};\n      margin: 0;\n    }\n\n    * {\n      scroll-behavior: smooth;\n      scrollbar-width: thin;\n      \n      ::-webkit-scrollbar {\n        width: .1rem;\n      }\n  \n      ::-webkit-scrollbar-track {\n        background-color: ${theme.colors?.gallery};\n      }\n  \n      ::-webkit-scrollbar-thumb {\n        border: .1rem solid ${theme.colors?.dustyGray};\n      } \n    }\n\n    h1, h2 {\n      font-weight: 500;\n      line-height: 1.5;\n      margin: 0;\n    }\n\n    #root {\n      margin: 0 auto;\n      max-width: 180rem;\n    }\n  `\n);\n\nexport default GlobalStyles;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport * as config from 'config';\nimport Routes from 'routes';\nimport GlobalStyles from 'global.styled';\n\nconst App = () => (\n  <ThemeProvider theme={config.theme}>\n    <GlobalStyles />\n    <Routes />\n  </ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {\n      'Service-Worker': 'script'\n    }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { themeTypes } from './theme.type';\n\nexport const theme: themeTypes = {\n  colors: {\n    white: '#fff',\n    alabaster: '#f7f7f7',\n    blueZodiac: '#0A1130',\n    dustyGray: '#999',\n    gallery: '#eee',\n    pastelGreen: '#6DD799',\n    japonica: '#D76D6D'\n  },\n  fonts: {\n    family: ['Roboto', 'sans-serif'],\n    sizes: {\n      reset: '10px',\n      title: '2.6rem',\n      subTitle: '1.6rem',\n      default: '1.4rem',\n      small: '1.2rem',\n      goals: '1.8rem',\n      percentage: '2.4rem'\n    }\n  },\n  radius: {\n    small: '.2rem',\n    big: '.4rem'\n  },\n  gutter: {\n    small: '1.5rem',\n    big: '3rem'\n  },\n  size: {\n    small: '512px',\n    medium: '900px',\n    large: '1200px',\n    xl: '1400px'\n  }\n};\n"],"sourceRoot":""}